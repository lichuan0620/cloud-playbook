apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: devel-fb
  namespace: elasticsearch
spec:
  type: filebeat
  version: "7.11.1"
  elasticsearchRef:
    name: devel
  config:
    output.elasticsearch:
      username: '"${ELASTIC_USERNAME}"'
      password: '"${ELASTIC_PASSWORD}"'
    filebeat.autodiscover.providers:
    - node: ${NODE_NAME}
      type: kubernetes
      hints:
        enabled: true
        default_config:
          type: container
          max_bytes: 65536
          paths:
          - /var/log/pods/${data.kubernetes.namespace}_${data.kubernetes.pod.name}_${data.kubernetes.pod.uid}/${data.kubernetes.container.name}/*.log
    setup.template:
      name: log-container-kubernetes
      pattern: log-container-kubernetes-*
    setup.ilm:
      rollover_alias: log-container-kubernetes
      pattern: '{now/d}-000001'
    processors:
    - drop_fields:
        fields:
        - "agent"
        - "host"
        - "log"
        - "container"
        - "ecs"
        - "kubernetes.labels"
        - "kubernetes.replicaset"
        - "kubernetes.node.uid"
        - "kubernetes.node.labels"
        - "kubernetes.pod.uid"
        - "kubernetes.namespace_uid"
        - "kubernetes.service.uid"
        - "kubernetes.container.image"
        ignore_missing: true
  daemonSet:
    podTemplate:
      metadata:
        annotations:
          co.elastic.logs/enabled: "false" # avoid recursive messages
      spec:
        serviceAccountName: devel-fb
        automountServiceAccountToken: true
        containers:
        - name: filebeat
          env:
          - name: ELASTIC_USERNAME
            valueFrom:
              secretKeyRef:
                name: devel-fb-auth
                key: filebeat-user
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: devel-fb-auth
                key: filebeat-password
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "200m"
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: varlogpods
            mountPath: /var/log/pods
        tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        volumes:
        - name: varlogpods
          hostPath:
            path: /var/log/pods
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: devel-fb
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devel-fb
  namespace: elasticsearch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: devel-fb
subjects:
- kind: ServiceAccount
  name: devel-fb
  namespace: elasticsearch
roleRef:
  kind: ClusterRole
  name: devel-fb
  apiGroup: rbac.authorization.k8s.io
